import sys
read = sys.stdin.readline


start_index_map = {
    'U': 0,   # 윗면 (0~8)
    'D': 9,   # 아랫면 (9~17)
    'F': 18,  # 앞면 (18~26)
    'B': 27,  # 뒷면 (27~35)
    'L': 36,  # 왼쪽면 (36~44)
    'R': 45   # 오른쪽면 (45~53)
}

rotate_map = {
    '+': {
        0: 2, 1: 5, 2: 8, 3: 1, 4: 4, 5: 7, 6: 0, 7: 3, 8: 6
    },
    '-': {
        0: 6, 1: 3, 2: 0, 3: 7, 4: 4, 5: 1, 6: 8, 7: 5, 8: 2
    },
    'U+': {  # 윗면 시계방향 회전
        18: 36, 19: 37, 20: 38,  # 앞면 윗줄 -> 왼쪽면 윗줄
        36: 27, 37: 28, 38: 29,  # 왼쪽면 윗줄 -> 뒷면 윗줄
        27: 45, 28: 46, 29: 47,  # 뒷면 윗줄 -> 오른쪽면 윗줄
        45: 18, 46: 19, 47: 20   # 오른쪽면 윗줄 -> 앞면 윗줄
    },
    'U-': {  # 윗면 반시계방향 회전
        18: 45, 19: 46, 20: 47,  # 앞면 윗줄 -> 오른쪽면 윗줄
        45: 27, 46: 28, 47: 29,  # 오른쪽면 윗줄 -> 뒷면 윗줄
        27: 36, 28: 37, 29: 38,  # 뒷면 윗줄 -> 왼쪽면 윗줄
        36: 18, 37: 19, 38: 20   # 왼쪽면 윗줄 -> 앞면 윗줄
    },
    'D+': {  # 아랫면 시계방향 회전
        24: 51, 25: 52, 26: 53,  # 앞면 아랫줄 -> 오른쪽면 아랫줄
        51: 33, 52: 34, 53: 35,  # 오른쪽면 아랫줄 -> 뒷면 아랫줄
        33: 42, 34: 43, 35: 44,  # 뒷면 아랫줄 -> 왼쪽면 아랫줄
        42: 24, 43: 25, 44: 26   # 왼쪽면 아랫줄 -> 앞면 아랫줄
    },
    'D-': {  # 아랫면 반시계방향 회전
        24: 42, 25: 43, 26: 44,  # 앞면 아랫줄 -> 왼쪽면 아랫줄
        42: 33, 43: 34, 44: 35,  # 왼쪽면 아랫줄 -> 뒷면 아랫줄
        33: 51, 34: 52, 35: 53,  # 뒷면 아랫줄 -> 오른쪽면 아랫줄
        51: 24, 52: 25, 53: 26   # 오른쪽면 아랫줄 -> 앞면 아랫줄
    },
    'F+': {  # 앞면 시계방향 회전
        6:  45, 7:  48, 8:  51,  # 윗면 아랫줄 -> 오른쪽면 왼쪽줄
        45: 11, 48: 10, 51:  9,  # 오른쪽면 왼쪽줄 -> 아랫면 윗줄
        9:  38, 10: 41, 11: 44,  # 아랫면 윗줄 -> 왼쪽면 오른쪽줄
        38:  8, 41:  7, 44:  6   # 왼쪽면 오른쪽줄 -> 윗면 아랫줄
    },
    'F-': {  # 앞면 반시계방향 회전
        6:  44, 7:  41, 8:  38,  # 윗면 아랫줄 -> 왼쪽면 오른쪽줄
        38:  9, 41: 10, 44: 11,  # 왼쪽면 오른쪽줄 -> 아랫면 윗줄
        9:  51, 10: 48, 11: 45,  # 아랫면 윗줄 -> 오른쪽면 왼쪽줄
        45:  6, 48:  7, 51:  8   # 오른쪽면 왼쪽줄 -> 윗면 아랫줄
    },
    'B+': {  # 뒷면 시계방향 회전
        0:  42, 1:  39, 2:  36,  # 윗면 윗줄 -> 왼쪽면 왼쪽줄
        36: 15, 39: 16, 42: 17,  # 왼쪽면 왼쪽줄 -> 아랫면 아랫줄
        15: 53, 16: 50, 17: 47,  # 아랫면 아랫줄 -> 오른쪽면 오른쪽줄
        47:  0, 50:  1, 53:  2   # 오른쪽면 오른쪽줄 -> 윗면 윗줄
    },
    'B-': {  # 뒷면 반시계방향 회전
        0:  47, 1:  50, 2:  53,  # 윗면 윗줄 -> 오른쪽면 오른쪽줄
        47: 17, 50: 16, 53: 15,  # 오른쪽면 오른쪽줄 -> 아랫면 아랫줄
        15: 36, 16: 39, 17: 42,  # 아랫면 아랫줄 -> 왼쪽면 왼쪽줄
        36:  2, 39:  1, 42:  0   # 왼쪽면 왼쪽줄 -> 윗면 윗줄
    },
    'L+': {  # 왼쪽면 시계방향 회전
        0:  18, 3:  21, 6:  24,  # 윗면 왼쪽줄 -> 앞면 왼쪽줄
        18:  9, 21: 12, 24: 15,  # 앞면 왼쪽줄 -> 아랫면 왼쪽줄
        9:  35, 12: 32, 15: 29,  # 아랫면 왼쪽줄 -> 뒷면 오른쪽줄
        29:  6, 32:  3, 35:  0   # 뒷면 오른쪽줄 -> 윗면 왼쪽줄
    },
    'L-': {  # 왼쪽면 반시계방향 회전
        0:  35, 3:  32, 6:  29,  # 윗면 왼쪽줄 -> 뒷면 오른쪽줄
        29: 15, 32: 12, 35:  9,  # 뒷면 오른쪽줄 -> 아랫면 왼쪽줄
        9:  18, 12: 21, 15: 24,  # 아랫면 왼쪽줄 -> 앞면 왼쪽줄
        18:  0, 21:  3, 24:  6   # 앞면 왼쪽줄 -> 윗면 왼쪽줄
    },
    'R+': {  # 오른쪽면 시계방향 회전
        2:  33, 5:  30, 8:  27,  # 윗면 오른쪽줄 -> 뒷면 왼쪽줄
        27: 17, 30: 14, 33: 11,  # 뒷면 왼쪽줄 -> 아랫면 오른쪽줄
        11: 20, 14: 23, 17: 26,  # 아랫면 오른쪽줄 -> 앞면 오른쪽줄
        20:  2, 23:  5, 26:  8   # 앞면 오른쪽줄 -> 윗면 오른쪽줄
    },
    'R-': {  # 오른쪽면 반시계방향 회전
        2:  20, 5:  23, 8:  26,  # 윗면 오른쪽줄 -> 앞면 오른쪽줄
        20: 11, 23: 14, 26: 17,  # 앞면 오른쪽줄 -> 아랫면 오른쪽줄
        11: 33, 14: 30, 17: 27,  # 아랫면 오른쪽줄 -> 뒷면 왼쪽줄
        27:  8, 30:  5, 33:  2   # 뒷면 왼쪽줄 -> 윗면 오른쪽줄
    }
}

TC = int(read())  # 테스트케이스 수
for _ in range(TC):
    n = int(read())  # 큐브를 돌린 횟수

    # 큐브: 각 면의 가장 왼쪽 위 -> 가장 오른쪽 아래
    cube = [
        'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w', 'w',  # 윗면 (0~8)
        'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y', 'y',  # 아랫면 (9~17)
        'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r',  # 앞면 (18~26)
        'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o', 'o',  # 뒷면 (27~35)
        'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g', 'g',  # 왼쪽면 (36~44)
        'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b', 'b'   # 오른쪽면 (45~53)
    ]

    commands = read().strip().split(" ")
    for command in commands:  # 회전수만큼 반복
        rotated = []

        # 회전하는 면 회전
        start_index = start_index_map[command[0]]
        for now, new in rotate_map[command[1]].items():
            rotated.append((new + start_index, cube[now + start_index]))

        # 회전하는 면에 인접한 다른 면 회전
        for now, new in rotate_map[command].items():
            rotated.append((new, cube[now]))

        # 실제 값 변경
        for index, value in rotated:
            cube[index] = value

    # 윗면 출력
    for i in range(0, 9, 3):
        print(''.join(cube[i:i + 3]))
